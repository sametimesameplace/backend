openapi: 3.0.3
info:
  title: SameTimeSamePlace API
  version: 0.3.1
  description: Find friends for an adventure.
paths:
  /api/v1/activity/:
    get:
      operationId: activity_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - activity
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityModelList'
          description: ''
    post:
      operationId: activity_create
      tags:
      - activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityModelRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: ''
  /api/v1/activity/{id}/:
    get:
      operationId: activity_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activity
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: ''
    put:
      operationId: activity_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityModelRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: ''
    patch:
      operationId: activity_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActivityModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActivityModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActivityModelRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: ''
    delete:
      operationId: activity_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activity
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/interest/:
    get:
      operationId: interest_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - interest
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInterestModelList'
          description: ''
    post:
      operationId: interest_create
      tags:
      - interest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterestModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InterestModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InterestModelRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestModel'
          description: ''
  /api/v1/interest/{id}/:
    get:
      operationId: interest_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interest.
        required: true
      tags:
      - interest
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestModel'
          description: ''
    put:
      operationId: interest_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interest.
        required: true
      tags:
      - interest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterestModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InterestModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InterestModelRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestModel'
          description: ''
    patch:
      operationId: interest_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interest.
        required: true
      tags:
      - interest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInterestModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInterestModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInterestModelRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestModel'
          description: ''
    delete:
      operationId: interest_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interest.
        required: true
      tags:
      - interest
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/language/:
    get:
      operationId: language_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - language
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLanguageModelList'
          description: ''
    post:
      operationId: language_create
      tags:
      - language
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LanguageModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LanguageModelRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageModel'
          description: ''
  /api/v1/language/{id}/:
    get:
      operationId: language_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - language
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageModel'
          description: ''
    put:
      operationId: language_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - language
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LanguageModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LanguageModelRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageModel'
          description: ''
    patch:
      operationId: language_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - language
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLanguageModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLanguageModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLanguageModelRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageModel'
          description: ''
    delete:
      operationId: language_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - language
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/login:
    post:
      operationId: login_create
      description: validating the incoming data, authenticating the user based on
        the provided credentials, and generating a token for the authenticated user.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /api/v1/match/:
    get:
      operationId: match_list
      description: API endpoint that allows matches to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - match
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMatchModelListRetrieveList'
              examples:
                ExampleForAMatchObject:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - id: 1
                      own_timeplace:
                        id: 13
                        user: 3
                        username: Anna
                        description: Want to go to the Train Museum
                        interests:
                        - id: 2
                          name: Trains
                        activities:
                        - id: 1
                          name: Visiting a Museum
                      foreign_timeplace:
                        id: 2
                        user: 2
                        username: Betty
                        description: Want to visit some kind of Museum
                        interests:
                        - id: 2
                          name: Trains
                        activities:
                        - id: 1
                          name: Visiting a Museum
                      foreign_email: null
                      foreign_phone: null
                      chat_accepted: false
                  summary: Example for a match object
          description: ''
  /api/v1/match/{id}/:
    get:
      operationId: match_retrieve
      description: API endpoint that allows matches to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this match.
        required: true
      tags:
      - match
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchModelListRetrieve'
              examples:
                ExampleForAMatchObject:
                  value:
                    id: 1
                    own_timeplace:
                      id: 13
                      user: 3
                      username: Anna
                      description: Want to go to the Train Museum
                      interests:
                      - id: 2
                        name: Trains
                      activities:
                      - id: 1
                        name: Visiting a Museum
                    foreign_timeplace:
                      id: 2
                      user: 2
                      username: Betty
                      description: Want to visit some kind of Museum
                      interests:
                      - id: 2
                        name: Trains
                      activities:
                      - id: 1
                        name: Visiting a Museum
                    foreign_email: null
                    foreign_phone: null
                    chat_accepted: false
                  summary: Example for a match object
          description: ''
    delete:
      operationId: match_destroy
      description: API endpoint that allows matches to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this match.
        required: true
      tags:
      - match
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/match/{id}/chat/:
    get:
      operationId: match_chat_retrieve
      description: API endpoint that allows matches to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this match.
        required: true
      tags:
      - match
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchModelListRetrieve'
              examples:
                ExampleForAMatchObject:
                  value:
                    id: 1
                    own_timeplace:
                      id: 13
                      user: 3
                      username: Anna
                      description: Want to go to the Train Museum
                      interests:
                      - id: 2
                        name: Trains
                      activities:
                      - id: 1
                        name: Visiting a Museum
                    foreign_timeplace:
                      id: 2
                      user: 2
                      username: Betty
                      description: Want to visit some kind of Museum
                      interests:
                      - id: 2
                        name: Trains
                      activities:
                      - id: 1
                        name: Visiting a Museum
                    foreign_email: null
                    foreign_phone: null
                    chat_accepted: false
                  summary: Example for a match object
          description: ''
  /api/v1/match/{id}/share_email/:
    post:
      operationId: match_share_email_create
      description: Set the email_user_x field to True for the user of the request.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this match.
        required: true
      tags:
      - match
      security:
      - tokenAuth: []
      responses:
        '201':
          description: No response body
        '403':
          description: No response body
  /api/v1/match/{id}/share_phone/:
    post:
      operationId: match_share_phone_create
      description: Set the phone_user_x field to True for the user of the request.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this match.
        required: true
      tags:
      - match
      security:
      - tokenAuth: []
      responses:
        '201':
          description: No response body
        '403':
          description: No response body
  /api/v1/timeplace/:
    get:
      operationId: timeplace_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - timeplace
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimePlaceModelViewList'
          description: ''
    post:
      operationId: timeplace_create
      description: |-
        Create a new TimePlace.
                Latitude and Longitude are numbers with up to six decimal places.
                Latitude needs to be between -90 and 90.
                Longitude needs to be between -180 and 180.
      tags:
      - timeplace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimePlaceModelCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimePlaceModelCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimePlaceModelCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePlaceModelView'
          description: ''
  /api/v1/timeplace/{id}/:
    get:
      operationId: timeplace_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      tags:
      - timeplace
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePlaceModelView'
          description: ''
    put:
      operationId: timeplace_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      tags:
      - timeplace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimePlaceModelUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimePlaceModelUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimePlaceModelUpdateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePlaceModelUpdate'
          description: ''
    patch:
      operationId: timeplace_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      tags:
      - timeplace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTimePlaceModelViewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTimePlaceModelViewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTimePlaceModelViewRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePlaceModelView'
          description: ''
    delete:
      operationId: timeplace_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      tags:
      - timeplace
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/timeplace/{id}/chats/:
    get:
      operationId: timeplace_chats_list
      description: View all active match-objects of a Timeplace
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - timeplace
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMatchModelListRetrieveList'
              examples:
                ExampleForAMatchObject:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - id: 1
                      own_timeplace:
                        id: 13
                        user: 3
                        username: Anna
                        description: Want to go to the Train Museum
                        interests:
                        - id: 2
                          name: Trains
                        activities:
                        - id: 1
                          name: Visiting a Museum
                      foreign_timeplace:
                        id: 2
                        user: 2
                        username: Betty
                        description: Want to visit some kind of Museum
                        interests:
                        - id: 2
                          name: Trains
                        activities:
                        - id: 1
                          name: Visiting a Museum
                      foreign_email: null
                      foreign_phone: null
                      chat_accepted: false
                  summary: Example for a match object
          description: ''
  /api/v1/timeplace/{id}/match/{timeplace_pk}/:
    get:
      operationId: timeplace_match_retrieve
      description: Check if there is an existing match object between two timeplaces.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      - in: path
        name: timeplace_pk
        schema:
          type: integer
        required: true
      tags:
      - timeplace
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_match_response'
          description: ''
    post:
      operationId: timeplace_match_create
      description: Create a new match object for two timeplaces.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      - in: path
        name: timeplace_pk
        schema:
          type: integer
        required: true
      tags:
      - timeplace
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_match_response'
          description: ''
        '403':
          description: Match already exists
  /api/v1/timeplace/{id}/matches/:
    get:
      operationId: timeplace_matches_list
      description: View all potential matches of a Timeplace
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - timeplace
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimePlaceMatchList'
          description: ''
  /api/v1/user/:
    get:
      operationId: user_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserModelList'
          description: ''
    post:
      operationId: user_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserModelRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
  /api/v1/user/{id}/:
    get:
      operationId: user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
    put:
      operationId: user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserModelRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
    patch:
      operationId: user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserModelRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
    delete:
      operationId: user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/userlanguage/:
    get:
      operationId: userlanguage_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - userlanguage
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserLanguageModelList'
          description: ''
    post:
      operationId: userlanguage_create
      tags:
      - userlanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLanguageCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLanguageCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLanguageCreateUpdateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLanguageCreateUpdate'
          description: ''
  /api/v1/userlanguage/{id}/:
    get:
      operationId: userlanguage_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user language.
        required: true
      tags:
      - userlanguage
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLanguageModel'
          description: ''
    put:
      operationId: userlanguage_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user language.
        required: true
      tags:
      - userlanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLanguageCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLanguageCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLanguageCreateUpdateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLanguageCreateUpdate'
          description: ''
    patch:
      operationId: userlanguage_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user language.
        required: true
      tags:
      - userlanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserLanguageModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserLanguageModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserLanguageModelRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLanguageModel'
          description: ''
    delete:
      operationId: userlanguage_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user language.
        required: true
      tags:
      - userlanguage
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/userprofile/:
    get:
      operationId: userprofile_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - userprofile
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileModelList'
          description: ''
    post:
      operationId: userprofile_create
      tags:
      - userprofile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileCreate'
          description: ''
  /api/v1/userprofile/{id}/:
    get:
      operationId: userprofile_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileModel'
          description: ''
    put:
      operationId: userprofile_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileUpdateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUpdate'
          description: ''
    patch:
      operationId: userprofile_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileModelRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileModel'
          description: ''
    delete:
      operationId: userprofile_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    ActivityModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    ActivityModelRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - name
    GenderEnum:
      enum:
      - M
      - F
      - D
      type: string
      description: |-
        * `M` - Male
        * `F` - Female
        * `D` - Diverse
    InterestModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    InterestModelRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - name
    LanguageModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lang:
          type: string
          maxLength: 255
      required:
      - id
      - lang
    LanguageModelRequest:
      type: object
      properties:
        lang:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - lang
    LevelEnum:
      enum:
      - Learning
      - Fluent
      - Preferred
      type: string
      description: |-
        * `Learning` - Learning
        * `Fluent` - Fluent
        * `Preferred` - Preferred
    MatchModelListRetrieve:
      type: object
      description: Serializer for listing and retrieving matches
      properties:
        id:
          type: integer
          readOnly: true
        own_timeplace:
          type: object
          additionalProperties: {}
          description: Returns the users own timeplace
          readOnly: true
        foreign_timeplace:
          type: object
          additionalProperties: {}
          description: Returns the timeplace of the matched user
          readOnly: true
        foreign_email:
          type: string
          format: email
          description: Returns the email of the matched user
          readOnly: true
        foreign_phone:
          type: string
          description: Returns the phone number of the matched user
          readOnly: true
        chat_accepted:
          type: boolean
      required:
      - foreign_email
      - foreign_phone
      - foreign_timeplace
      - id
      - own_timeplace
    PaginatedActivityModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityModel'
    PaginatedInterestModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InterestModel'
    PaginatedLanguageModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LanguageModel'
    PaginatedMatchModelListRetrieveList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MatchModelListRetrieve'
    PaginatedTimePlaceMatchList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TimePlaceMatch'
    PaginatedTimePlaceModelViewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TimePlaceModelView'
    PaginatedUserLanguageModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserLanguageModel'
    PaginatedUserModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
    PaginatedUserProfileModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserProfileModel'
    PatchedActivityModelRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
    PatchedInterestModelRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
    PatchedLanguageModelRequest:
      type: object
      properties:
        lang:
          type: string
          minLength: 1
          maxLength: 255
    PatchedTimePlaceModelViewRequest:
      type: object
      description: |-
        Serializer for the TimePlace model that includes detailed
        information about the user, interests and activities
      properties:
        user:
          $ref: '#/components/schemas/UserModelRequest'
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        city:
          type: string
          nullable: true
          maxLength: 100
        radius:
          type: integer
          maximum: 32767
          minimum: 0
        description:
          type: string
          minLength: 1
          maxLength: 500
        interests:
          type: array
          items:
            $ref: '#/components/schemas/InterestModelRequest'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityModelRequest'
    PatchedUserLanguageModelRequest:
      type: object
      properties:
        userprofile:
          type: integer
        level:
          $ref: '#/components/schemas/LevelEnum'
    PatchedUserModelRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        date_joined:
          type: string
          format: date-time
        bio:
          type: string
        title:
          type: string
          nullable: true
          description: Your profession
          maxLength: 100
    PatchedUserProfileModelRequest:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserModelRequest'
        name:
          type: string
          minLength: 1
          maxLength: 255
        hometown:
          type: string
          minLength: 1
          maxLength: 255
        slogan:
          type: string
          minLength: 1
          maxLength: 255
        birthday:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone:
          type: string
          minLength: 1
          maxLength: 20
        profile_email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UserLanguageModelRequest'
    TimePlaceMatch:
      type: object
      description: Serializer to show the matches for a Timeplace
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        username:
          type: string
        description:
          type: string
          maxLength: 500
        interests:
          type: array
          items:
            $ref: '#/components/schemas/InterestModel'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityModel'
      required:
      - activities
      - description
      - id
      - interests
      - user
      - username
    TimePlaceModelCreateRequest:
      type: object
      description: |-
        Serializer to create a TimePlace model instance that takes interests
        and activities as a list of integers and does not include the user.
        Automatically fills the city field with the nearest city to the given
        coordinates in a radius of 100 miles.
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        radius:
          type: integer
          maximum: 32767
          minimum: 0
        description:
          type: string
          minLength: 1
          maxLength: 500
        interests:
          type: array
          items:
            type: integer
        activities:
          type: array
          items:
            type: integer
      required:
      - activities
      - description
      - end
      - interests
      - latitude
      - longitude
      - radius
      - start
    TimePlaceModelUpdate:
      type: object
      description: |-
        Serializer to update a TimePlace model instance that takes interests
        and activities as a list of integers and does not include the user.
      properties:
        id:
          type: integer
          readOnly: true
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        radius:
          type: integer
          maximum: 32767
          minimum: 0
        description:
          type: string
          maxLength: 500
        interests:
          type: array
          items:
            type: integer
        activities:
          type: array
          items:
            type: integer
      required:
      - activities
      - description
      - end
      - id
      - interests
      - radius
      - start
    TimePlaceModelUpdateRequest:
      type: object
      description: |-
        Serializer to update a TimePlace model instance that takes interests
        and activities as a list of integers and does not include the user.
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        radius:
          type: integer
          maximum: 32767
          minimum: 0
        description:
          type: string
          minLength: 1
          maxLength: 500
        interests:
          type: array
          items:
            type: integer
        activities:
          type: array
          items:
            type: integer
      required:
      - activities
      - description
      - end
      - interests
      - radius
      - start
    TimePlaceModelView:
      type: object
      description: |-
        Serializer for the TimePlace model that includes detailed
        information about the user, interests and activities
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/UserModel'
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        city:
          type: string
          nullable: true
          maxLength: 100
        radius:
          type: integer
          maximum: 32767
          minimum: 0
        description:
          type: string
          maxLength: 500
        interests:
          type: array
          items:
            $ref: '#/components/schemas/InterestModel'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityModel'
      required:
      - activities
      - description
      - end
      - id
      - interests
      - latitude
      - longitude
      - radius
      - start
      - user
    UserLanguageCreateUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        language:
          type: integer
        level:
          $ref: '#/components/schemas/LevelEnum'
      required:
      - id
      - language
      - level
    UserLanguageCreateUpdateRequest:
      type: object
      properties:
        language:
          type: integer
        level:
          $ref: '#/components/schemas/LevelEnum'
      required:
      - language
      - level
    UserLanguageModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        userprofile:
          type: integer
        language:
          type: string
          readOnly: true
        level:
          $ref: '#/components/schemas/LevelEnum'
      required:
      - id
      - language
      - level
      - userprofile
    UserLanguageModelRequest:
      type: object
      properties:
        userprofile:
          type: integer
        level:
          $ref: '#/components/schemas/LevelEnum'
      required:
      - level
      - userprofile
    UserLogin:
      type: object
      description: ensures that both the username and password fields are present
        in the input data
      properties:
        username:
          type: string
          maxLength: 255
      required:
      - username
    UserLoginRequest:
      type: object
      description: ensures that both the username and password fields are present
        in the input data
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    UserModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        date_joined:
          type: string
          format: date-time
        bio:
          type: string
        title:
          type: string
          nullable: true
          description: Your profession
          maxLength: 100
      required:
      - email
      - id
      - username
    UserModelRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        date_joined:
          type: string
          format: date-time
        bio:
          type: string
        title:
          type: string
          nullable: true
          description: Your profession
          maxLength: 100
      required:
      - email
      - password
      - username
    UserProfileCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        hometown:
          type: string
          maxLength: 255
        slogan:
          type: string
          maxLength: 255
        birthday:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone:
          type: string
          maxLength: 20
        profile_email:
          type: string
          format: email
          maxLength: 254
      required:
      - birthday
      - gender
      - hometown
      - name
      - phone
      - profile_email
      - slogan
    UserProfileCreateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        hometown:
          type: string
          minLength: 1
          maxLength: 255
        slogan:
          type: string
          minLength: 1
          maxLength: 255
        birthday:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone:
          type: string
          minLength: 1
          maxLength: 20
        profile_email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
      required:
      - birthday
      - gender
      - hometown
      - name
      - phone
      - profile_email
      - slogan
    UserProfileModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/UserModel'
        name:
          type: string
          maxLength: 255
        hometown:
          type: string
          maxLength: 255
        slogan:
          type: string
          maxLength: 255
        birthday:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone:
          type: string
          maxLength: 20
        profile_email:
          type: string
          format: email
          maxLength: 254
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UserLanguageModel'
        age:
          type: integer
          readOnly: true
      required:
      - age
      - birthday
      - gender
      - hometown
      - id
      - languages
      - name
      - phone
      - profile_email
      - slogan
      - user
    UserProfileUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        hometown:
          type: string
          maxLength: 255
        slogan:
          type: string
          maxLength: 255
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone:
          type: string
          maxLength: 20
        profile_email:
          type: string
          format: email
          maxLength: 254
      required:
      - gender
      - hometown
      - name
      - phone
      - profile_email
      - slogan
    UserProfileUpdateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        hometown:
          type: string
          minLength: 1
          maxLength: 255
        slogan:
          type: string
          minLength: 1
          maxLength: 255
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone:
          type: string
          minLength: 1
          maxLength: 20
        profile_email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
      required:
      - gender
      - hometown
      - name
      - phone
      - profile_email
      - slogan
    create_match_response:
      type: object
      properties:
        match_id:
          type: integer
      required:
      - match_id
    get_match_response:
      type: object
      properties:
        match_id:
          type: integer
      required:
      - match_id
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: http://localhost:8000/
  description: Local Dev Server
