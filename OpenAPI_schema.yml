openapi: 3.0.3
info:
  title: SameTimeSamePlace API
  version: 0.1.0
  description: Find friends for an adventure.
paths:
  /api/v1/activity/:
    get:
      operationId: activity_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - activity
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityModelList'
          description: ''
    post:
      operationId: activity_create
      tags:
      - activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityModel'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: ''
  /api/v1/activity/{id}/:
    get:
      operationId: activity_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activity
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: ''
    put:
      operationId: activity_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityModel'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: ''
    patch:
      operationId: activity_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActivityModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActivityModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActivityModel'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: ''
    delete:
      operationId: activity_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - activity
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/interest/:
    get:
      operationId: interest_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - interest
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInterestModelList'
          description: ''
    post:
      operationId: interest_create
      tags:
      - interest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterestModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InterestModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InterestModel'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestModel'
          description: ''
  /api/v1/interest/{id}/:
    get:
      operationId: interest_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interest.
        required: true
      tags:
      - interest
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestModel'
          description: ''
    put:
      operationId: interest_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interest.
        required: true
      tags:
      - interest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterestModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InterestModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InterestModel'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestModel'
          description: ''
    patch:
      operationId: interest_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interest.
        required: true
      tags:
      - interest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInterestModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInterestModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInterestModel'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestModel'
          description: ''
    delete:
      operationId: interest_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interest.
        required: true
      tags:
      - interest
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/login:
    post:
      operationId: login_create
      tags:
      - login
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/timeplace/:
    get:
      operationId: timeplace_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - timeplace
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimePlaceModelViewList'
          description: ''
    post:
      operationId: timeplace_create
      tags:
      - timeplace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimePlaceModelCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimePlaceModelCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimePlaceModelCreateUpdate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePlaceModelCreateUpdate'
          description: ''
  /api/v1/timeplace/{id}/:
    get:
      operationId: timeplace_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      tags:
      - timeplace
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePlaceModelView'
          description: ''
    put:
      operationId: timeplace_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      tags:
      - timeplace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimePlaceModelCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimePlaceModelCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimePlaceModelCreateUpdate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePlaceModelCreateUpdate'
          description: ''
    patch:
      operationId: timeplace_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      tags:
      - timeplace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTimePlaceModelView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTimePlaceModelView'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTimePlaceModelView'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePlaceModelView'
          description: ''
    delete:
      operationId: timeplace_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this time place.
        required: true
      tags:
      - timeplace
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/:
    get:
      operationId: user_list
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserModel'
          description: ''
    post:
      operationId: user_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserModel'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
  /api/v1/user/{id}/:
    get:
      operationId: user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
    put:
      operationId: user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserModel'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
    patch:
      operationId: user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserModel'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: ''
    delete:
      operationId: user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/userprofile/:
    get:
      operationId: userprofile_list
      tags:
      - userprofile
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileModel'
          description: ''
    post:
      operationId: userprofile_create
      tags:
      - userprofile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileCreate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileCreate'
          description: ''
  /api/v1/userprofile/{id}/:
    get:
      operationId: userprofile_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileModel'
          description: ''
    put:
      operationId: userprofile_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUpdate'
          description: ''
    patch:
      operationId: userprofile_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileModel'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileModel'
          description: ''
    delete:
      operationId: userprofile_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user profile.
        required: true
      tags:
      - userprofile
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    ActivityModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    GenderEnum:
      enum:
      - M
      - F
      - D
      type: string
      description: |-
        * `M` - Male
        * `F` - Female
        * `D` - Diverse
    InterestModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    LevelEnum:
      enum:
      - Learning
      - Fluent
      - Preferred
      type: string
      description: |-
        * `Learning` - Learning
        * `Fluent` - Fluent
        * `Preferred` - Preferred
    PaginatedActivityModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityModel'
    PaginatedInterestModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InterestModel'
    PaginatedTimePlaceModelViewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TimePlaceModelView'
    PatchedActivityModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedInterestModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedTimePlaceModelView:
      type: object
      description: |-
        Serializer for the TimePlace model that includes detailed
        information about the user, interests and activities
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          $ref: '#/components/schemas/UserModel'
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        description:
          type: string
          maxLength: 500
        interests:
          type: array
          items:
            $ref: '#/components/schemas/InterestModel'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityModel'
    PatchedUserModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        date_joined:
          type: string
          format: date-time
        bio:
          type: string
        title:
          type: string
          nullable: true
          description: Your profession
          maxLength: 100
    PatchedUserProfileModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/UserModel'
        name:
          type: string
          maxLength: 255
        hometown:
          type: string
          maxLength: 255
        slogan:
          type: string
          maxLength: 255
        birthday:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone:
          type: string
          maxLength: 20
        profile_email:
          type: string
          format: email
          maxLength: 254
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UserLanguageModel'
        age:
          type: string
          readOnly: true
    TimePlaceModelCreateUpdate:
      type: object
      description: |-
        Serializer for the TimePlace model that takes interests and
        activities as a list of integers and does not include the user_id
      properties:
        id:
          type: integer
          readOnly: true
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        description:
          type: string
          maxLength: 500
        interests:
          type: array
          items:
            type: integer
        activities:
          type: array
          items:
            type: integer
      required:
      - activities
      - description
      - end
      - id
      - interests
      - latitude
      - longitude
      - start
    TimePlaceModelView:
      type: object
      description: |-
        Serializer for the TimePlace model that includes detailed
        information about the user, interests and activities
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          $ref: '#/components/schemas/UserModel'
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
        description:
          type: string
          maxLength: 500
        interests:
          type: array
          items:
            $ref: '#/components/schemas/InterestModel'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityModel'
      required:
      - activities
      - description
      - end
      - id
      - interests
      - latitude
      - longitude
      - start
      - user_id
    UserLanguageModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        userprofile:
          type: integer
        language:
          type: string
          readOnly: true
        level:
          $ref: '#/components/schemas/LevelEnum'
      required:
      - id
      - language
      - level
      - userprofile
    UserModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        date_joined:
          type: string
          format: date-time
        bio:
          type: string
        title:
          type: string
          nullable: true
          description: Your profession
          maxLength: 100
      required:
      - email
      - id
      - password
      - username
    UserProfileCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        hometown:
          type: string
          maxLength: 255
        slogan:
          type: string
          maxLength: 255
        birthday:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone:
          type: string
          maxLength: 20
        profile_email:
          type: string
          format: email
          maxLength: 254
      required:
      - birthday
      - gender
      - hometown
      - name
      - phone
      - profile_email
      - slogan
    UserProfileModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/UserModel'
        name:
          type: string
          maxLength: 255
        hometown:
          type: string
          maxLength: 255
        slogan:
          type: string
          maxLength: 255
        birthday:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone:
          type: string
          maxLength: 20
        profile_email:
          type: string
          format: email
          maxLength: 254
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UserLanguageModel'
        age:
          type: string
          readOnly: true
      required:
      - age
      - birthday
      - gender
      - hometown
      - id
      - languages
      - name
      - phone
      - profile_email
      - slogan
      - user
    UserProfileUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        hometown:
          type: string
          maxLength: 255
        slogan:
          type: string
          maxLength: 255
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone:
          type: string
          maxLength: 20
        profile_email:
          type: string
          format: email
          maxLength: 254
      required:
      - gender
      - hometown
      - name
      - phone
      - profile_email
      - slogan
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
